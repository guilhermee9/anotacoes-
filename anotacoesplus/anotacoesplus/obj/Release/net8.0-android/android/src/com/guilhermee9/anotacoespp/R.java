/* AUTO-GENERATED FILE. DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found. It
 * should not be modified by hand.
 */

package com.guilhermee9.anotacoespp;

public final class R {
  public static final class anim {
    public static final int fragment_fast_out_extra_slow_in=0x7f010000;
  }
  public static final class animator {
    public static final int fragment_close_enter=0x7f020000;
    public static final int fragment_close_exit=0x7f020001;
    public static final int fragment_fade_enter=0x7f020002;
    public static final int fragment_fade_exit=0x7f020003;
    public static final int fragment_open_enter=0x7f020004;
    public static final int fragment_open_exit=0x7f020005;
  }
  public static final class attr {
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int activityAction=0x7f030000;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int activityName=0x7f030001;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int alpha=0x7f030002;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int alwaysExpand=0x7f030003;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int animationBackgroundColor=0x7f030004;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int clearTop=0x7f030005;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int coordinatorLayoutStyle=0x7f030006;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int drawerLayoutStyle=0x7f030007;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int elevation=0x7f030008;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * </table>
     */
    public static final int finishPrimaryWithPlaceholder=0x7f030009;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int finishPrimaryWithSecondary=0x7f03000a;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int finishSecondaryWithPrimary=0x7f03000b;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int font=0x7f03000c;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderAuthority=0x7f03000d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int fontProviderCerts=0x7f03000e;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchStrategy=0x7f03000f;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     */
    public static final int fontProviderFetchTimeout=0x7f030010;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderPackage=0x7f030011;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderQuery=0x7f030012;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontProviderSystemFontFamily=0x7f030013;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     */
    public static final int fontStyle=0x7f030014;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int fontVariationSettings=0x7f030015;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int fontWeight=0x7f030016;
    /**
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int keylines=0x7f030017;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int lStar=0x7f030018;
    /**
     * The id of an anchor view that this view should position relative to.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int layout_anchor=0x7f030019;
    /**
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     */
    public static final int layout_anchorGravity=0x7f03001a;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_aspectRatio=0x7f03001b;
    /**
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int layout_behavior=0x7f03001c;
    /**
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     */
    public static final int layout_dodgeInsetEdges=0x7f03001d;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_heightPercent=0x7f03001e;
    /**
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     */
    public static final int layout_insetEdge=0x7f03001f;
    /**
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int layout_keyline=0x7f030020;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginBottomPercent=0x7f030021;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginEndPercent=0x7f030022;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginLeftPercent=0x7f030023;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginPercent=0x7f030024;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginRightPercent=0x7f030025;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginStartPercent=0x7f030026;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_marginTopPercent=0x7f030027;
    /**
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     */
    public static final int layout_widthPercent=0x7f030028;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int nestedScrollViewStyle=0x7f030029;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int placeholderActivityName=0x7f03002a;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int postSplashScreenTheme=0x7f03002b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int primaryActivityName=0x7f03002c;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int queryPatterns=0x7f03002d;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int secondaryActivityAction=0x7f03002e;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int secondaryActivityName=0x7f03002f;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int shortcutMatchRequired=0x7f030030;
    /**
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     */
    public static final int splashScreenIconSize=0x7f030031;
    /**
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottomToTop</td><td>4</td><td></td></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * <tr><td>topToBottom</td><td>3</td><td></td></tr>
     * </table>
     */
    public static final int splitLayoutDirection=0x7f030032;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int splitMaxAspectRatioInLandscape=0x7f030033;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     */
    public static final int splitMaxAspectRatioInPortrait=0x7f030034;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int splitMinHeightDp=0x7f030035;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int splitMinSmallestWidthDp=0x7f030036;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int splitMinWidthDp=0x7f030037;
    /**
     * <p>May be a floating point value, such as "<code>1.2</code>".
     */
    public static final int splitRatio=0x7f030038;
    /**
     * Drawable to display behind the status bar when the view is set to draw behind it.
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int statusBarBackground=0x7f030039;
    /**
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     */
    public static final int stickyPlaceholder=0x7f03003a;
    /**
     * Background color for SwipeRefreshLayout progress spinner.
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int swipeRefreshLayoutProgressSpinnerBackgroundColor=0x7f03003b;
    /**
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     */
    public static final int tag=0x7f03003c;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int ttcIndex=0x7f03003d;
    /**
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     */
    public static final int windowSplashScreenAnimatedIcon=0x7f03003e;
    /**
     * <p>May be an integer value, such as "<code>100</code>".
     */
    public static final int windowSplashScreenAnimationDuration=0x7f03003f;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int windowSplashScreenBackground=0x7f030040;
    /**
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     */
    public static final int windowSplashScreenIconBackgroundColor=0x7f030041;
  }
  public static final class color {
    public static final int androidx_core_ripple_material_light=0x7f040000;
    public static final int androidx_core_secondary_text_default_material_light=0x7f040001;
    public static final int call_notification_answer_color=0x7f040002;
    public static final int call_notification_decline_color=0x7f040003;
    public static final int ic_launcher_background=0x7f040004;
    public static final int notification_action_color_filter=0x7f040005;
    public static final int notification_icon_bg_color=0x7f040006;
  }
  public static final class dimen {
    public static final int compat_button_inset_horizontal_material=0x7f050000;
    public static final int compat_button_inset_vertical_material=0x7f050001;
    public static final int compat_button_padding_horizontal_material=0x7f050002;
    public static final int compat_button_padding_vertical_material=0x7f050003;
    public static final int compat_control_corner_material=0x7f050004;
    public static final int compat_notification_large_icon_max_height=0x7f050005;
    public static final int compat_notification_large_icon_max_width=0x7f050006;
    public static final int def_drawer_elevation=0x7f050007;
    public static final int notification_action_icon_size=0x7f050008;
    public static final int notification_action_text_size=0x7f050009;
    public static final int notification_big_circle_margin=0x7f05000a;
    public static final int notification_content_margin_start=0x7f05000b;
    public static final int notification_large_icon_height=0x7f05000c;
    public static final int notification_large_icon_width=0x7f05000d;
    public static final int notification_main_column_padding_top=0x7f05000e;
    public static final int notification_media_narrow_margin=0x7f05000f;
    public static final int notification_right_icon_size=0x7f050010;
    public static final int notification_right_side_padding_top=0x7f050011;
    public static final int notification_small_icon_background_padding=0x7f050012;
    public static final int notification_small_icon_size_as_large=0x7f050013;
    public static final int notification_subtext_size=0x7f050014;
    public static final int notification_top_pad=0x7f050015;
    public static final int notification_top_pad_large_text=0x7f050016;
    public static final int splashscreen_icon_mask_size_no_background=0x7f050017;
    public static final int splashscreen_icon_mask_size_with_background=0x7f050018;
    public static final int splashscreen_icon_mask_stroke_no_background=0x7f050019;
    public static final int splashscreen_icon_mask_stroke_with_background=0x7f05001a;
    public static final int splashscreen_icon_size=0x7f05001b;
    public static final int splashscreen_icon_size_no_background=0x7f05001c;
    public static final int splashscreen_icon_size_with_background=0x7f05001d;
  }
  public static final class drawable {
    public static final int compat_splash_screen=0x7f060000;
    public static final int compat_splash_screen_no_icon_background=0x7f060001;
    public static final int ic_call_answer=0x7f060002;
    public static final int ic_call_answer_low=0x7f060003;
    public static final int ic_call_answer_video=0x7f060004;
    public static final int ic_call_answer_video_low=0x7f060005;
    public static final int ic_call_decline=0x7f060006;
    public static final int ic_call_decline_low=0x7f060007;
    public static final int icon_background=0x7f060008;
    public static final int notification_action_background=0x7f060009;
    public static final int notification_bg=0x7f06000a;
    public static final int notification_bg_low=0x7f06000b;
    public static final int notification_bg_low_normal=0x7f06000c;
    public static final int notification_bg_low_pressed=0x7f06000d;
    public static final int notification_bg_normal=0x7f06000e;
    public static final int notification_bg_normal_pressed=0x7f06000f;
    public static final int notification_icon_background=0x7f060010;
    public static final int notification_oversize_large_icon_bg=0x7f060011;
    public static final int notification_template_icon_bg=0x7f060012;
    public static final int notification_template_icon_low_bg=0x7f060013;
    public static final int notification_tile_bg=0x7f060014;
    public static final int notify_panel_notification_icon_bg=0x7f060015;
  }
  public static final class id {
    public static final int TelefoneEditText=0x7f070000;
    public static final int accessibility_action_clickable_span=0x7f070001;
    public static final int accessibility_custom_action_0=0x7f070002;
    public static final int accessibility_custom_action_1=0x7f070003;
    public static final int accessibility_custom_action_10=0x7f070004;
    public static final int accessibility_custom_action_11=0x7f070005;
    public static final int accessibility_custom_action_12=0x7f070006;
    public static final int accessibility_custom_action_13=0x7f070007;
    public static final int accessibility_custom_action_14=0x7f070008;
    public static final int accessibility_custom_action_15=0x7f070009;
    public static final int accessibility_custom_action_16=0x7f07000a;
    public static final int accessibility_custom_action_17=0x7f07000b;
    public static final int accessibility_custom_action_18=0x7f07000c;
    public static final int accessibility_custom_action_19=0x7f07000d;
    public static final int accessibility_custom_action_2=0x7f07000e;
    public static final int accessibility_custom_action_20=0x7f07000f;
    public static final int accessibility_custom_action_21=0x7f070010;
    public static final int accessibility_custom_action_22=0x7f070011;
    public static final int accessibility_custom_action_23=0x7f070012;
    public static final int accessibility_custom_action_24=0x7f070013;
    public static final int accessibility_custom_action_25=0x7f070014;
    public static final int accessibility_custom_action_26=0x7f070015;
    public static final int accessibility_custom_action_27=0x7f070016;
    public static final int accessibility_custom_action_28=0x7f070017;
    public static final int accessibility_custom_action_29=0x7f070018;
    public static final int accessibility_custom_action_3=0x7f070019;
    public static final int accessibility_custom_action_30=0x7f07001a;
    public static final int accessibility_custom_action_31=0x7f07001b;
    public static final int accessibility_custom_action_4=0x7f07001c;
    public static final int accessibility_custom_action_5=0x7f07001d;
    public static final int accessibility_custom_action_6=0x7f07001e;
    public static final int accessibility_custom_action_7=0x7f07001f;
    public static final int accessibility_custom_action_8=0x7f070020;
    public static final int accessibility_custom_action_9=0x7f070021;
    public static final int action_container=0x7f070022;
    public static final int action_divider=0x7f070023;
    public static final int action_image=0x7f070024;
    public static final int action_text=0x7f070025;
    public static final int actions=0x7f070026;
    public static final int adjacent=0x7f070027;
    public static final int all=0x7f070028;
    public static final int always=0x7f070029;
    public static final int alwaysAllow=0x7f07002a;
    public static final int alwaysDisallow=0x7f07002b;
    public static final int androidx_window_activity_scope=0x7f07002c;
    public static final int async=0x7f07002d;
    public static final int blocking=0x7f07002e;
    public static final int bottom=0x7f07002f;
    public static final int bottomToTop=0x7f070030;
    public static final int cadastrarButton=0x7f070031;
    public static final int campusEditText=0x7f070032;
    public static final int center=0x7f070033;
    public static final int center_horizontal=0x7f070034;
    public static final int center_vertical=0x7f070035;
    public static final int chronometer=0x7f070036;
    public static final int clip_horizontal=0x7f070037;
    public static final int clip_vertical=0x7f070038;
    public static final int cpfEditText=0x7f070039;
    public static final int dialog_button=0x7f07003a;
    public static final int edit_text_id=0x7f07003b;
    public static final int emailEditText=0x7f07003c;
    public static final int end=0x7f07003d;
    public static final int fill=0x7f07003e;
    public static final int fill_horizontal=0x7f07003f;
    public static final int fill_vertical=0x7f070040;
    public static final int forever=0x7f070041;
    public static final int forgotPasswordTextView=0x7f070042;
    public static final int fragment_container_view_tag=0x7f070043;
    public static final int ghost_view=0x7f070044;
    public static final int ghost_view_holder=0x7f070045;
    public static final int hide_ime_id=0x7f070046;
    public static final int icon=0x7f070047;
    public static final int icon_group=0x7f070048;
    public static final int info=0x7f070049;
    public static final int italic=0x7f07004a;
    public static final int left=0x7f07004b;
    public static final int line1=0x7f07004c;
    public static final int line3=0x7f07004d;
    public static final int locale=0x7f07004e;
    public static final int loginButton=0x7f07004f;
    public static final int ltr=0x7f070050;
    public static final int nascEditText=0x7f070051;
    public static final int never=0x7f070052;
    public static final int nomeEditText=0x7f070053;
    public static final int nomeapp=0x7f070054;
    public static final int none=0x7f070055;
    public static final int normal=0x7f070056;
    public static final int notification_background=0x7f070057;
    public static final int notification_main_column=0x7f070058;
    public static final int notification_main_column_container=0x7f070059;
    public static final int parent_matrix=0x7f07005a;
    public static final int passwordConfEditText=0x7f07005b;
    public static final int passwordEditText=0x7f07005c;
    public static final int report_drawn=0x7f07005d;
    public static final int right=0x7f07005e;
    public static final int right_icon=0x7f07005f;
    public static final int right_side=0x7f070060;
    public static final int rtl=0x7f070061;
    public static final int save_non_transition_alpha=0x7f070062;
    public static final int save_overlay_view=0x7f070063;
    public static final int signupTextView=0x7f070064;
    public static final int special_effects_controller_view_tag=0x7f070065;
    public static final int splashscreen_icon_view=0x7f070066;
    public static final int start=0x7f070067;
    public static final int tag_accessibility_actions=0x7f070068;
    public static final int tag_accessibility_clickable_spans=0x7f070069;
    public static final int tag_accessibility_heading=0x7f07006a;
    public static final int tag_accessibility_pane_title=0x7f07006b;
    public static final int tag_on_apply_window_listener=0x7f07006c;
    public static final int tag_on_receive_content_listener=0x7f07006d;
    public static final int tag_on_receive_content_mime_types=0x7f07006e;
    public static final int tag_screen_reader_focusable=0x7f07006f;
    public static final int tag_state_description=0x7f070070;
    public static final int tag_transition_group=0x7f070071;
    public static final int tag_unhandled_key_event_manager=0x7f070072;
    public static final int tag_unhandled_key_listeners=0x7f070073;
    public static final int tag_window_insets_animation_callback=0x7f070074;
    public static final int text=0x7f070075;
    public static final int text2=0x7f070076;
    public static final int time=0x7f070077;
    public static final int title=0x7f070078;
    public static final int top=0x7f070079;
    public static final int topToBottom=0x7f07007a;
    public static final int transition_clip=0x7f07007b;
    public static final int transition_current_scene=0x7f07007c;
    public static final int transition_image_transform=0x7f07007d;
    public static final int transition_layout_save=0x7f07007e;
    public static final int transition_pause_alpha=0x7f07007f;
    public static final int transition_position=0x7f070080;
    public static final int transition_scene_layoutid_cache=0x7f070081;
    public static final int transition_transform=0x7f070082;
    public static final int view_tree_lifecycle_owner=0x7f070083;
    public static final int view_tree_on_back_pressed_dispatcher_owner=0x7f070084;
    public static final int view_tree_saved_state_registry_owner=0x7f070085;
    public static final int view_tree_view_model_store_owner=0x7f070086;
    public static final int visible_removing_fragment_view_tag=0x7f070087;
  }
  public static final class integer {
    public static final int default_icon_animation_duration=0x7f080000;
    public static final int status_bar_notification_info_maxnum=0x7f080001;
  }
  public static final class layout {
    public static final int activity_cadastro=0x7f090000;
    public static final int activity_login=0x7f090001;
    public static final int activity_main=0x7f090002;
    public static final int custom_dialog=0x7f090003;
    public static final int ime_base_split_test_activity=0x7f090004;
    public static final int ime_secondary_split_test_activity=0x7f090005;
    public static final int notification_action=0x7f090006;
    public static final int notification_action_tombstone=0x7f090007;
    public static final int notification_template_custom_big=0x7f090008;
    public static final int notification_template_icon_group=0x7f090009;
    public static final int notification_template_part_chronometer=0x7f09000a;
    public static final int notification_template_part_time=0x7f09000b;
    public static final int splash_screen_view=0x7f09000c;
  }
  public static final class mipmap {
    public static final int appicon=0x7f0a0000;
    public static final int appicon_background=0x7f0a0001;
    public static final int appicon_foreground=0x7f0a0002;
    public static final int appicon_round=0x7f0a0003;
  }
  public static final class string {
    public static final int androidx_startup=0x7f0b0000;
    public static final int app_name=0x7f0b0001;
    public static final int app_text=0x7f0b0002;
    public static final int call_notification_answer_action=0x7f0b0003;
    public static final int call_notification_answer_video_action=0x7f0b0004;
    public static final int call_notification_decline_action=0x7f0b0005;
    public static final int call_notification_hang_up_action=0x7f0b0006;
    public static final int call_notification_incoming_text=0x7f0b0007;
    public static final int call_notification_ongoing_text=0x7f0b0008;
    public static final int call_notification_screening_text=0x7f0b0009;
    public static final int status_bar_notification_info_overflow=0x7f0b000a;
  }
  public static final class style {
    public static final int Base_Theme_SplashScreen=0x7f0c0000;
    public static final int Base_Theme_SplashScreen_DayNight=0x7f0c0001;
    public static final int Base_Theme_SplashScreen_Light=0x7f0c0002;
    public static final int Base_v21_Theme_SplashScreen=0x7f0c0003;
    public static final int Base_v21_Theme_SplashScreen_Light=0x7f0c0004;
    public static final int Base_v27_Theme_SplashScreen=0x7f0c0005;
    public static final int Base_v27_Theme_SplashScreen_Light=0x7f0c0006;
    public static final int TextAppearance_Compat_Notification=0x7f0c0007;
    public static final int TextAppearance_Compat_Notification_Info=0x7f0c0008;
    public static final int TextAppearance_Compat_Notification_Line2=0x7f0c0009;
    public static final int TextAppearance_Compat_Notification_Time=0x7f0c000a;
    public static final int TextAppearance_Compat_Notification_Title=0x7f0c000b;
    public static final int Theme_SplashScreen=0x7f0c000c;
    public static final int Theme_SplashScreen_Common=0x7f0c000d;
    public static final int Theme_SplashScreen_IconBackground=0x7f0c000e;
    public static final int Widget_Compat_NotificationActionContainer=0x7f0c000f;
    public static final int Widget_Compat_NotificationActionText=0x7f0c0010;
    public static final int Widget_Support_CoordinatorLayout=0x7f0c0011;
  }
  public static final class styleable {
    /**
     * Attributes that can be used with a ActivityFilter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityFilter_activityAction com.guilhermee9.anotacoespp:activityAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityFilter_activityName com.guilhermee9.anotacoespp:activityName}</code></td><td></td></tr>
     * </table>
     * @see #ActivityFilter_activityAction
     * @see #ActivityFilter_activityName
     */
    public static final int[] ActivityFilter={
      0x7f030000, 0x7f030001
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#activityAction}
     * attribute's value can be found in the {@link #ActivityFilter} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:activityAction
     */
    public static final int ActivityFilter_activityAction=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#activityName}
     * attribute's value can be found in the {@link #ActivityFilter} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:activityName
     */
    public static final int ActivityFilter_activityName=1;
    /**
     * Attributes that can be used with a ActivityRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ActivityRule_alwaysExpand com.guilhermee9.anotacoespp:alwaysExpand}</code></td><td></td></tr>
     * <tr><td><code>{@link #ActivityRule_tag com.guilhermee9.anotacoespp:tag}</code></td><td></td></tr>
     * </table>
     * @see #ActivityRule_alwaysExpand
     * @see #ActivityRule_tag
     */
    public static final int[] ActivityRule={
      0x7f030003, 0x7f03003c
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#alwaysExpand}
     * attribute's value can be found in the {@link #ActivityRule} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:alwaysExpand
     */
    public static final int ActivityRule_alwaysExpand=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#tag}
     * attribute's value can be found in the {@link #ActivityRule} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:tag
     */
    public static final int ActivityRule_tag=1;
    /**
     * Attributes that can be used with a Capability.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Capability_queryPatterns com.guilhermee9.anotacoespp:queryPatterns}</code></td><td></td></tr>
     * <tr><td><code>{@link #Capability_shortcutMatchRequired com.guilhermee9.anotacoespp:shortcutMatchRequired}</code></td><td></td></tr>
     * </table>
     * @see #Capability_queryPatterns
     * @see #Capability_shortcutMatchRequired
     */
    public static final int[] Capability={
      0x7f03002d, 0x7f030030
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#queryPatterns}
     * attribute's value can be found in the {@link #Capability} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:queryPatterns
     */
    public static final int Capability_queryPatterns=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#shortcutMatchRequired}
     * attribute's value can be found in the {@link #Capability} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:shortcutMatchRequired
     */
    public static final int Capability_shortcutMatchRequired=1;
    /**
     * Attributes that can be used with a ColorStateListItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_alpha android:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_android_lStar android:lStar}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_alpha com.guilhermee9.anotacoespp:alpha}</code></td><td></td></tr>
     * <tr><td><code>{@link #ColorStateListItem_lStar com.guilhermee9.anotacoespp:lStar}</code></td><td></td></tr>
     * </table>
     * @see #ColorStateListItem_android_color
     * @see #ColorStateListItem_android_alpha
     * @see #ColorStateListItem_android_lStar
     * @see #ColorStateListItem_alpha
     * @see #ColorStateListItem_lStar
     */
    public static final int[] ColorStateListItem={
      0x010101a5, 0x0101031f, 0x01010647, 0x7f030002, 
      0x7f030018
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#color}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int ColorStateListItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:alpha
     */
    public static final int ColorStateListItem_android_alpha=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#lStar}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:lStar
     */
    public static final int ColorStateListItem_android_lStar=2;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#alpha}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:alpha
     */
    public static final int ColorStateListItem_alpha=3;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#lStar}
     * attribute's value can be found in the {@link #ColorStateListItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:lStar
     */
    public static final int ColorStateListItem_lStar=4;
    /**
     * Attributes that can be used with a CoordinatorLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_keylines com.guilhermee9.anotacoespp:keylines}</code></td><td>A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_statusBarBackground com.guilhermee9.anotacoespp:statusBarBackground}</code></td><td>Drawable to display behind the status bar when the view is set to draw behind it.</td></tr>
     * </table>
     * @see #CoordinatorLayout_keylines
     * @see #CoordinatorLayout_statusBarBackground
     */
    public static final int[] CoordinatorLayout={
      0x7f030017, 0x7f030039
    };
    /**
     * <p>
     * @attr description
     * A reference to an array of integers representing the
     * locations of horizontal keylines in dp from the starting edge.
     * Child views can refer to these keylines for alignment using
     * layout_keyline="index" where index is a 0-based index into
     * this array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:keylines
     */
    public static final int CoordinatorLayout_keylines=0;
    /**
     * <p>
     * @attr description
     * Drawable to display behind the status bar when the view is set to draw behind it.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:statusBarBackground
     */
    public static final int CoordinatorLayout_statusBarBackground=1;
    /**
     * Attributes that can be used with a CoordinatorLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_android_layout_gravity android:layout_gravity}</code></td><td></td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchor com.guilhermee9.anotacoespp:layout_anchor}</code></td><td>The id of an anchor view that this view should position relative to.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_anchorGravity com.guilhermee9.anotacoespp:layout_anchorGravity}</code></td><td>Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_behavior com.guilhermee9.anotacoespp:layout_behavior}</code></td><td>The class name of a Behavior class defining special runtime behavior
     * for this child view.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_dodgeInsetEdges com.guilhermee9.anotacoespp:layout_dodgeInsetEdges}</code></td><td>Specifies how this view dodges the inset edges of the CoordinatorLayout.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_insetEdge com.guilhermee9.anotacoespp:layout_insetEdge}</code></td><td>Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.</td></tr>
     * <tr><td><code>{@link #CoordinatorLayout_Layout_layout_keyline com.guilhermee9.anotacoespp:layout_keyline}</code></td><td>The index of a keyline this view should position relative to.</td></tr>
     * </table>
     * @see #CoordinatorLayout_Layout_android_layout_gravity
     * @see #CoordinatorLayout_Layout_layout_anchor
     * @see #CoordinatorLayout_Layout_layout_anchorGravity
     * @see #CoordinatorLayout_Layout_layout_behavior
     * @see #CoordinatorLayout_Layout_layout_dodgeInsetEdges
     * @see #CoordinatorLayout_Layout_layout_insetEdge
     * @see #CoordinatorLayout_Layout_layout_keyline
     */
    public static final int[] CoordinatorLayout_Layout={
      0x010100b3, 0x7f030019, 0x7f03001a, 0x7f03001c, 
      0x7f03001d, 0x7f03001f, 0x7f030020
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#layout_gravity}
     * attribute's value can be found in the {@link #CoordinatorLayout_Layout} array.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td></td></tr>
     * <tr><td>center</td><td>11</td><td></td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td></td></tr>
     * <tr><td>center_vertical</td><td>10</td><td></td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td></td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td></td></tr>
     * <tr><td>end</td><td>800005</td><td></td></tr>
     * <tr><td>fill</td><td>77</td><td></td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td></td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td></td></tr>
     * <tr><td>left</td><td>3</td><td></td></tr>
     * <tr><td>right</td><td>5</td><td></td></tr>
     * <tr><td>start</td><td>800003</td><td></td></tr>
     * <tr><td>top</td><td>30</td><td></td></tr>
     * </table>
     *
     * @attr name android:layout_gravity
     */
    public static final int CoordinatorLayout_Layout_android_layout_gravity=0;
    /**
     * <p>
     * @attr description
     * The id of an anchor view that this view should position relative to.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:layout_anchor
     */
    public static final int CoordinatorLayout_Layout_layout_anchor=1;
    /**
     * <p>
     * @attr description
     * Specifies how an object should position relative to an anchor, on both the X and Y axes,
     * within its parent's bounds.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Push object to the bottom of its container, not changing its size.</td></tr>
     * <tr><td>center</td><td>11</td><td>Place the object in the center of its container in both the vertical and horizontal axis, not changing its size.</td></tr>
     * <tr><td>center_horizontal</td><td>1</td><td>Place object in the horizontal center of its container, not changing its size.</td></tr>
     * <tr><td>center_vertical</td><td>10</td><td>Place object in the vertical center of its container, not changing its size.</td></tr>
     * <tr><td>clip_horizontal</td><td>8</td><td>Additional option that can be set to have the left and/or right edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the horizontal gravity: a left gravity will clip the right
     * edge, a right gravity will clip the left edge, and neither will clip both edges.</td></tr>
     * <tr><td>clip_vertical</td><td>80</td><td>Additional option that can be set to have the top and/or bottom edges of
     * the child clipped to its container's bounds.
     * The clip will be based on the vertical gravity: a top gravity will clip the bottom
     * edge, a bottom gravity will clip the top edge, and neither will clip both edges.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Push object to the end of its container, not changing its size.</td></tr>
     * <tr><td>fill</td><td>77</td><td>Grow the horizontal and vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_horizontal</td><td>7</td><td>Grow the horizontal size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>fill_vertical</td><td>70</td><td>Grow the vertical size of the object if needed so it completely fills its container.</td></tr>
     * <tr><td>left</td><td>3</td><td>Push object to the left of its container, not changing its size.</td></tr>
     * <tr><td>right</td><td>5</td><td>Push object to the right of its container, not changing its size.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Push object to the beginning of its container, not changing its size.</td></tr>
     * <tr><td>top</td><td>30</td><td>Push object to the top of its container, not changing its size.</td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:layout_anchorGravity
     */
    public static final int CoordinatorLayout_Layout_layout_anchorGravity=2;
    /**
     * <p>
     * @attr description
     * The class name of a Behavior class defining special runtime behavior
     * for this child view.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:layout_behavior
     */
    public static final int CoordinatorLayout_Layout_layout_behavior=3;
    /**
     * <p>
     * @attr description
     * Specifies how this view dodges the inset edges of the CoordinatorLayout.
     *
     * <p>Must be one or more (separated by '|') of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>all</td><td>77</td><td>Dodge all the inset edges.</td></tr>
     * <tr><td>bottom</td><td>50</td><td>Dodge the bottom inset edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Dodge the end inset edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Dodge the left inset edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't dodge any edges</td></tr>
     * <tr><td>right</td><td>5</td><td>Dodge the right inset edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Dodge the start inset edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Dodge the top inset edge.</td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:layout_dodgeInsetEdges
     */
    public static final int CoordinatorLayout_Layout_layout_dodgeInsetEdges=4;
    /**
     * <p>
     * @attr description
     * Specifies how this view insets the CoordinatorLayout and make some other views
     * dodge it.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottom</td><td>50</td><td>Inset the bottom edge.</td></tr>
     * <tr><td>end</td><td>800005</td><td>Inset the end edge.</td></tr>
     * <tr><td>left</td><td>3</td><td>Inset the left edge.</td></tr>
     * <tr><td>none</td><td>0</td><td>Don't inset.</td></tr>
     * <tr><td>right</td><td>5</td><td>Inset the right edge.</td></tr>
     * <tr><td>start</td><td>800003</td><td>Inset the start edge.</td></tr>
     * <tr><td>top</td><td>30</td><td>Inset the top edge.</td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:layout_insetEdge
     */
    public static final int CoordinatorLayout_Layout_layout_insetEdge=5;
    /**
     * <p>
     * @attr description
     * The index of a keyline this view should position relative to.
     * android:layout_gravity will affect how the view aligns to the
     * specified keyline.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:layout_keyline
     */
    public static final int CoordinatorLayout_Layout_layout_keyline=6;
    /**
     * Attributes that can be used with a DrawerLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #DrawerLayout_elevation com.guilhermee9.anotacoespp:elevation}</code></td><td></td></tr>
     * </table>
     * @see #DrawerLayout_elevation
     */
    public static final int[] DrawerLayout={
      0x7f030008
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#elevation}
     * attribute's value can be found in the {@link #DrawerLayout} array.
     *
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     *
     * @attr name com.guilhermee9.anotacoespp:elevation
     */
    public static final int DrawerLayout_elevation=0;
    /**
     * Attributes that can be used with a FontFamily.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderAuthority com.guilhermee9.anotacoespp:fontProviderAuthority}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderCerts com.guilhermee9.anotacoespp:fontProviderCerts}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchStrategy com.guilhermee9.anotacoespp:fontProviderFetchStrategy}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderFetchTimeout com.guilhermee9.anotacoespp:fontProviderFetchTimeout}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderPackage com.guilhermee9.anotacoespp:fontProviderPackage}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderQuery com.guilhermee9.anotacoespp:fontProviderQuery}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamily_fontProviderSystemFontFamily com.guilhermee9.anotacoespp:fontProviderSystemFontFamily}</code></td><td></td></tr>
     * </table>
     * @see #FontFamily_fontProviderAuthority
     * @see #FontFamily_fontProviderCerts
     * @see #FontFamily_fontProviderFetchStrategy
     * @see #FontFamily_fontProviderFetchTimeout
     * @see #FontFamily_fontProviderPackage
     * @see #FontFamily_fontProviderQuery
     * @see #FontFamily_fontProviderSystemFontFamily
     */
    public static final int[] FontFamily={
      0x7f03000d, 0x7f03000e, 0x7f03000f, 0x7f030010, 
      0x7f030011, 0x7f030012, 0x7f030013
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderAuthority}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderAuthority
     */
    public static final int FontFamily_fontProviderAuthority=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderCerts}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderCerts
     */
    public static final int FontFamily_fontProviderCerts=1;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderFetchStrategy}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>async</td><td>1</td><td>The async font fetch works as follows.
     * First, check the local cache, then if the requeted font is not cached, trigger a
     * request the font and continue with layout inflation. Once the font fetch succeeds, the
     * target text view will be refreshed with the downloaded font data. The
     * fontProviderFetchTimeout will be ignored if async loading is specified.</td></tr>
     * <tr><td>blocking</td><td>0</td><td>The blocking font fetch works as follows.
     * First, check the local cache, then if the requested font is not cached, request the
     * font from the provider and wait until it is finished.  You can change the length of
     * the timeout by modifying fontProviderFetchTimeout.  If the timeout happens, the
     * default typeface will be used instead.</td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderFetchStrategy
     */
    public static final int FontFamily_fontProviderFetchStrategy=2;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderFetchTimeout}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>forever</td><td>ffffffff</td><td>A special value for the timeout. In this case, the blocking font fetching will not
     * timeout and wait until a reply is received from the font provider.</td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderFetchTimeout
     */
    public static final int FontFamily_fontProviderFetchTimeout=3;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderPackage}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderPackage
     */
    public static final int FontFamily_fontProviderPackage=4;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderQuery}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderQuery
     */
    public static final int FontFamily_fontProviderQuery=5;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontProviderSystemFontFamily}
     * attribute's value can be found in the {@link #FontFamily} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:fontProviderSystemFontFamily
     */
    public static final int FontFamily_fontProviderSystemFontFamily=6;
    /**
     * Attributes that can be used with a FontFamilyFont.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_font android:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontWeight android:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontStyle android:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_ttcIndex android:ttcIndex}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_android_fontVariationSettings android:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_font com.guilhermee9.anotacoespp:font}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontStyle com.guilhermee9.anotacoespp:fontStyle}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontVariationSettings com.guilhermee9.anotacoespp:fontVariationSettings}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_fontWeight com.guilhermee9.anotacoespp:fontWeight}</code></td><td></td></tr>
     * <tr><td><code>{@link #FontFamilyFont_ttcIndex com.guilhermee9.anotacoespp:ttcIndex}</code></td><td></td></tr>
     * </table>
     * @see #FontFamilyFont_android_font
     * @see #FontFamilyFont_android_fontWeight
     * @see #FontFamilyFont_android_fontStyle
     * @see #FontFamilyFont_android_ttcIndex
     * @see #FontFamilyFont_android_fontVariationSettings
     * @see #FontFamilyFont_font
     * @see #FontFamilyFont_fontStyle
     * @see #FontFamilyFont_fontVariationSettings
     * @see #FontFamilyFont_fontWeight
     * @see #FontFamilyFont_ttcIndex
     */
    public static final int[] FontFamilyFont={
      0x01010532, 0x01010533, 0x0101053f, 0x0101056f, 
      0x01010570, 0x7f03000c, 0x7f030014, 0x7f030015, 
      0x7f030016, 0x7f03003d
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:font
     */
    public static final int FontFamilyFont_android_font=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:fontWeight
     */
    public static final int FontFamilyFont_android_fontWeight=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontStyle}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name android:fontStyle
     */
    public static final int FontFamilyFont_android_fontStyle=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name android:ttcIndex
     */
    public static final int FontFamilyFont_android_ttcIndex=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:fontVariationSettings
     */
    public static final int FontFamilyFont_android_fontVariationSettings=4;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#font}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:font
     */
    public static final int FontFamilyFont_font=5;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontStyle}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>italic</td><td>1</td><td></td></tr>
     * <tr><td>normal</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:fontStyle
     */
    public static final int FontFamilyFont_fontStyle=6;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontVariationSettings}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:fontVariationSettings
     */
    public static final int FontFamilyFont_fontVariationSettings=7;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#fontWeight}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:fontWeight
     */
    public static final int FontFamilyFont_fontWeight=8;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#ttcIndex}
     * attribute's value can be found in the {@link #FontFamilyFont} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:ttcIndex
     */
    public static final int FontFamilyFont_ttcIndex=9;
    /**
     * Attributes that can be used with a Fragment.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #Fragment_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_id android:id}</code></td><td></td></tr>
     * <tr><td><code>{@link #Fragment_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #Fragment_android_name
     * @see #Fragment_android_id
     * @see #Fragment_android_tag
     */
    public static final int[] Fragment={
      0x01010003, 0x010100d0, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int Fragment_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#id}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a reference to another resource, in the form
     * "<code>@[+][<i>package</i>:]<i>type</i>/<i>name</i></code>" or a theme
     * attribute in the form
     * "<code>?[<i>package</i>:]<i>type</i>/<i>name</i></code>".
     *
     * @attr name android:id
     */
    public static final int Fragment_android_id=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #Fragment} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int Fragment_android_tag=2;
    /**
     * Attributes that can be used with a FragmentContainerView.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_name android:name}</code></td><td></td></tr>
     * <tr><td><code>{@link #FragmentContainerView_android_tag android:tag}</code></td><td></td></tr>
     * </table>
     * @see #FragmentContainerView_android_name
     * @see #FragmentContainerView_android_tag
     */
    public static final int[] FragmentContainerView={
      0x01010003, 0x010100d1
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#name}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:name
     */
    public static final int FragmentContainerView_android_name=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tag}
     * attribute's value can be found in the {@link #FragmentContainerView} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name android:tag
     */
    public static final int FragmentContainerView_android_tag=1;
    /**
     * Attributes that can be used with a GradientColor.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColor_android_startColor android:startColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endColor android:endColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_type android:type}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerX android:centerX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerY android:centerY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_gradientRadius android:gradientRadius}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_tileMode android:tileMode}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_centerColor android:centerColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startX android:startX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_startY android:startY}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endX android:endX}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColor_android_endY android:endY}</code></td><td></td></tr>
     * </table>
     * @see #GradientColor_android_startColor
     * @see #GradientColor_android_endColor
     * @see #GradientColor_android_type
     * @see #GradientColor_android_centerX
     * @see #GradientColor_android_centerY
     * @see #GradientColor_android_gradientRadius
     * @see #GradientColor_android_tileMode
     * @see #GradientColor_android_centerColor
     * @see #GradientColor_android_startX
     * @see #GradientColor_android_startY
     * @see #GradientColor_android_endX
     * @see #GradientColor_android_endY
     */
    public static final int[] GradientColor={
      0x0101019d, 0x0101019e, 0x010101a1, 0x010101a2, 
      0x010101a3, 0x010101a4, 0x01010201, 0x0101020b, 
      0x01010510, 0x01010511, 0x01010512, 0x01010513
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#startColor}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:startColor
     */
    public static final int GradientColor_android_startColor=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#endColor}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:endColor
     */
    public static final int GradientColor_android_endColor=1;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#type}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>linear</td><td>0</td><td></td></tr>
     * <tr><td>radial</td><td>1</td><td></td></tr>
     * <tr><td>sweep</td><td>2</td><td></td></tr>
     * </table>
     *
     * @attr name android:type
     */
    public static final int GradientColor_android_type=2;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#centerX}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerX
     */
    public static final int GradientColor_android_centerX=3;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#centerY}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:centerY
     */
    public static final int GradientColor_android_centerY=4;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#gradientRadius}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>May be a dimension value, which is a floating point number appended with a
     * unit such as "<code>14.5sp</code>".
     * Available units are: px (pixels), dp (density-independent pixels),
     * sp (scaled pixels based on preferred font size), in (inches), and
     * mm (millimeters).
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name android:gradientRadius
     */
    public static final int GradientColor_android_gradientRadius=5;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#tileMode}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>clamp</td><td>0</td><td></td></tr>
     * <tr><td>disabled</td><td>ffffffff</td><td></td></tr>
     * <tr><td>mirror</td><td>2</td><td></td></tr>
     * <tr><td>repeat</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name android:tileMode
     */
    public static final int GradientColor_android_tileMode=6;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#centerColor}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:centerColor
     */
    public static final int GradientColor_android_centerColor=7;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#startX}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startX
     */
    public static final int GradientColor_android_startX=8;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#startY}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:startY
     */
    public static final int GradientColor_android_startY=9;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#endX}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endX
     */
    public static final int GradientColor_android_endX=10;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#endY}
     * attribute's value can be found in the {@link #GradientColor} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:endY
     */
    public static final int GradientColor_android_endY=11;
    /**
     * Attributes that can be used with a GradientColorItem.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #GradientColorItem_android_color android:color}</code></td><td></td></tr>
     * <tr><td><code>{@link #GradientColorItem_android_offset android:offset}</code></td><td></td></tr>
     * </table>
     * @see #GradientColorItem_android_color
     * @see #GradientColorItem_android_offset
     */
    public static final int[] GradientColorItem={
      0x010101a5, 0x01010514
    };
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#color}
     * attribute's value can be found in the {@link #GradientColorItem} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name android:color
     */
    public static final int GradientColorItem_android_color=0;
    /**
     * <p>This symbol is the offset where the {@link android.R.attr#offset}
     * attribute's value can be found in the {@link #GradientColorItem} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name android:offset
     */
    public static final int GradientColorItem_android_offset=1;
    /**
     * Attributes that can be used with a PercentLayout_Layout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_aspectRatio com.guilhermee9.anotacoespp:layout_aspectRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_heightPercent com.guilhermee9.anotacoespp:layout_heightPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginBottomPercent com.guilhermee9.anotacoespp:layout_marginBottomPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginEndPercent com.guilhermee9.anotacoespp:layout_marginEndPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginLeftPercent com.guilhermee9.anotacoespp:layout_marginLeftPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginPercent com.guilhermee9.anotacoespp:layout_marginPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginRightPercent com.guilhermee9.anotacoespp:layout_marginRightPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginStartPercent com.guilhermee9.anotacoespp:layout_marginStartPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_marginTopPercent com.guilhermee9.anotacoespp:layout_marginTopPercent}</code></td><td></td></tr>
     * <tr><td><code>{@link #PercentLayout_Layout_layout_widthPercent com.guilhermee9.anotacoespp:layout_widthPercent}</code></td><td></td></tr>
     * </table>
     * @see #PercentLayout_Layout_layout_aspectRatio
     * @see #PercentLayout_Layout_layout_heightPercent
     * @see #PercentLayout_Layout_layout_marginBottomPercent
     * @see #PercentLayout_Layout_layout_marginEndPercent
     * @see #PercentLayout_Layout_layout_marginLeftPercent
     * @see #PercentLayout_Layout_layout_marginPercent
     * @see #PercentLayout_Layout_layout_marginRightPercent
     * @see #PercentLayout_Layout_layout_marginStartPercent
     * @see #PercentLayout_Layout_layout_marginTopPercent
     * @see #PercentLayout_Layout_layout_widthPercent
     */
    public static final int[] PercentLayout_Layout={
      0x7f03001b, 0x7f03001e, 0x7f030021, 0x7f030022, 
      0x7f030023, 0x7f030024, 0x7f030025, 0x7f030026, 
      0x7f030027, 0x7f030028
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_aspectRatio}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_aspectRatio
     */
    public static final int PercentLayout_Layout_layout_aspectRatio=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_heightPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_heightPercent
     */
    public static final int PercentLayout_Layout_layout_heightPercent=1;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginBottomPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginBottomPercent
     */
    public static final int PercentLayout_Layout_layout_marginBottomPercent=2;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginEndPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginEndPercent
     */
    public static final int PercentLayout_Layout_layout_marginEndPercent=3;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginLeftPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginLeftPercent
     */
    public static final int PercentLayout_Layout_layout_marginLeftPercent=4;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginPercent
     */
    public static final int PercentLayout_Layout_layout_marginPercent=5;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginRightPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginRightPercent
     */
    public static final int PercentLayout_Layout_layout_marginRightPercent=6;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginStartPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginStartPercent
     */
    public static final int PercentLayout_Layout_layout_marginStartPercent=7;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_marginTopPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_marginTopPercent
     */
    public static final int PercentLayout_Layout_layout_marginTopPercent=8;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#layout_widthPercent}
     * attribute's value can be found in the {@link #PercentLayout_Layout} array.
     *
     * <p>May be a fractional value, which is a floating point number appended with
     * either % or %p, such as "<code>14.5%</code>".
     * The % suffix always means a percentage of the base size;
     * the optional %p suffix provides a size relative to some parent container.
     *
     * @attr name com.guilhermee9.anotacoespp:layout_widthPercent
     */
    public static final int PercentLayout_Layout_layout_widthPercent=9;
    /**
     * Attributes that can be used with a SplitPairFilter.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPairFilter_primaryActivityName com.guilhermee9.anotacoespp:primaryActivityName}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairFilter_secondaryActivityAction com.guilhermee9.anotacoespp:secondaryActivityAction}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairFilter_secondaryActivityName com.guilhermee9.anotacoespp:secondaryActivityName}</code></td><td></td></tr>
     * </table>
     * @see #SplitPairFilter_primaryActivityName
     * @see #SplitPairFilter_secondaryActivityAction
     * @see #SplitPairFilter_secondaryActivityName
     */
    public static final int[] SplitPairFilter={
      0x7f03002c, 0x7f03002e, 0x7f03002f
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#primaryActivityName}
     * attribute's value can be found in the {@link #SplitPairFilter} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:primaryActivityName
     */
    public static final int SplitPairFilter_primaryActivityName=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#secondaryActivityAction}
     * attribute's value can be found in the {@link #SplitPairFilter} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:secondaryActivityAction
     */
    public static final int SplitPairFilter_secondaryActivityAction=1;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#secondaryActivityName}
     * attribute's value can be found in the {@link #SplitPairFilter} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:secondaryActivityName
     */
    public static final int SplitPairFilter_secondaryActivityName=2;
    /**
     * Attributes that can be used with a SplitPairRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPairRule_animationBackgroundColor com.guilhermee9.anotacoespp:animationBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_clearTop com.guilhermee9.anotacoespp:clearTop}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_finishPrimaryWithSecondary com.guilhermee9.anotacoespp:finishPrimaryWithSecondary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_finishSecondaryWithPrimary com.guilhermee9.anotacoespp:finishSecondaryWithPrimary}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitLayoutDirection com.guilhermee9.anotacoespp:splitLayoutDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMaxAspectRatioInLandscape com.guilhermee9.anotacoespp:splitMaxAspectRatioInLandscape}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMaxAspectRatioInPortrait com.guilhermee9.anotacoespp:splitMaxAspectRatioInPortrait}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMinHeightDp com.guilhermee9.anotacoespp:splitMinHeightDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMinSmallestWidthDp com.guilhermee9.anotacoespp:splitMinSmallestWidthDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitMinWidthDp com.guilhermee9.anotacoespp:splitMinWidthDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_splitRatio com.guilhermee9.anotacoespp:splitRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPairRule_tag com.guilhermee9.anotacoespp:tag}</code></td><td></td></tr>
     * </table>
     * @see #SplitPairRule_animationBackgroundColor
     * @see #SplitPairRule_clearTop
     * @see #SplitPairRule_finishPrimaryWithSecondary
     * @see #SplitPairRule_finishSecondaryWithPrimary
     * @see #SplitPairRule_splitLayoutDirection
     * @see #SplitPairRule_splitMaxAspectRatioInLandscape
     * @see #SplitPairRule_splitMaxAspectRatioInPortrait
     * @see #SplitPairRule_splitMinHeightDp
     * @see #SplitPairRule_splitMinSmallestWidthDp
     * @see #SplitPairRule_splitMinWidthDp
     * @see #SplitPairRule_splitRatio
     * @see #SplitPairRule_tag
     */
    public static final int[] SplitPairRule={
      0x7f030004, 0x7f030005, 0x7f03000a, 0x7f03000b, 
      0x7f030032, 0x7f030033, 0x7f030034, 0x7f030035, 
      0x7f030036, 0x7f030037, 0x7f030038, 0x7f03003c
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#animationBackgroundColor}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:animationBackgroundColor
     */
    public static final int SplitPairRule_animationBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#clearTop}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:clearTop
     */
    public static final int SplitPairRule_clearTop=1;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#finishPrimaryWithSecondary}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:finishPrimaryWithSecondary
     */
    public static final int SplitPairRule_finishPrimaryWithSecondary=2;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#finishSecondaryWithPrimary}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * <tr><td>never</td><td>0</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:finishSecondaryWithPrimary
     */
    public static final int SplitPairRule_finishSecondaryWithPrimary=3;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitLayoutDirection}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottomToTop</td><td>4</td><td></td></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * <tr><td>topToBottom</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitLayoutDirection
     */
    public static final int SplitPairRule_splitLayoutDirection=4;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMaxAspectRatioInLandscape}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitMaxAspectRatioInLandscape
     */
    public static final int SplitPairRule_splitMaxAspectRatioInLandscape=5;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMaxAspectRatioInPortrait}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitMaxAspectRatioInPortrait
     */
    public static final int SplitPairRule_splitMaxAspectRatioInPortrait=6;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinHeightDp}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinHeightDp
     */
    public static final int SplitPairRule_splitMinHeightDp=7;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinSmallestWidthDp}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinSmallestWidthDp
     */
    public static final int SplitPairRule_splitMinSmallestWidthDp=8;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinWidthDp}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinWidthDp
     */
    public static final int SplitPairRule_splitMinWidthDp=9;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitRatio}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitRatio
     */
    public static final int SplitPairRule_splitRatio=10;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#tag}
     * attribute's value can be found in the {@link #SplitPairRule} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:tag
     */
    public static final int SplitPairRule_tag=11;
    /**
     * Attributes that can be used with a SplitPlaceholderRule.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_animationBackgroundColor com.guilhermee9.anotacoespp:animationBackgroundColor}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_finishPrimaryWithPlaceholder com.guilhermee9.anotacoespp:finishPrimaryWithPlaceholder}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_placeholderActivityName com.guilhermee9.anotacoespp:placeholderActivityName}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitLayoutDirection com.guilhermee9.anotacoespp:splitLayoutDirection}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMaxAspectRatioInLandscape com.guilhermee9.anotacoespp:splitMaxAspectRatioInLandscape}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMaxAspectRatioInPortrait com.guilhermee9.anotacoespp:splitMaxAspectRatioInPortrait}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMinHeightDp com.guilhermee9.anotacoespp:splitMinHeightDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMinSmallestWidthDp com.guilhermee9.anotacoespp:splitMinSmallestWidthDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitMinWidthDp com.guilhermee9.anotacoespp:splitMinWidthDp}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_splitRatio com.guilhermee9.anotacoespp:splitRatio}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_stickyPlaceholder com.guilhermee9.anotacoespp:stickyPlaceholder}</code></td><td></td></tr>
     * <tr><td><code>{@link #SplitPlaceholderRule_tag com.guilhermee9.anotacoespp:tag}</code></td><td></td></tr>
     * </table>
     * @see #SplitPlaceholderRule_animationBackgroundColor
     * @see #SplitPlaceholderRule_finishPrimaryWithPlaceholder
     * @see #SplitPlaceholderRule_placeholderActivityName
     * @see #SplitPlaceholderRule_splitLayoutDirection
     * @see #SplitPlaceholderRule_splitMaxAspectRatioInLandscape
     * @see #SplitPlaceholderRule_splitMaxAspectRatioInPortrait
     * @see #SplitPlaceholderRule_splitMinHeightDp
     * @see #SplitPlaceholderRule_splitMinSmallestWidthDp
     * @see #SplitPlaceholderRule_splitMinWidthDp
     * @see #SplitPlaceholderRule_splitRatio
     * @see #SplitPlaceholderRule_stickyPlaceholder
     * @see #SplitPlaceholderRule_tag
     */
    public static final int[] SplitPlaceholderRule={
      0x7f030004, 0x7f030009, 0x7f03002a, 0x7f030032, 
      0x7f030033, 0x7f030034, 0x7f030035, 0x7f030036, 
      0x7f030037, 0x7f030038, 0x7f03003a, 0x7f03003c
    };
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#animationBackgroundColor}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:animationBackgroundColor
     */
    public static final int SplitPlaceholderRule_animationBackgroundColor=0;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#finishPrimaryWithPlaceholder}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>adjacent</td><td>2</td><td></td></tr>
     * <tr><td>always</td><td>1</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:finishPrimaryWithPlaceholder
     */
    public static final int SplitPlaceholderRule_finishPrimaryWithPlaceholder=1;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#placeholderActivityName}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:placeholderActivityName
     */
    public static final int SplitPlaceholderRule_placeholderActivityName=2;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitLayoutDirection}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>bottomToTop</td><td>4</td><td></td></tr>
     * <tr><td>locale</td><td>0</td><td></td></tr>
     * <tr><td>ltr</td><td>1</td><td></td></tr>
     * <tr><td>rtl</td><td>2</td><td></td></tr>
     * <tr><td>topToBottom</td><td>3</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitLayoutDirection
     */
    public static final int SplitPlaceholderRule_splitLayoutDirection=3;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMaxAspectRatioInLandscape}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitMaxAspectRatioInLandscape
     */
    public static final int SplitPlaceholderRule_splitMaxAspectRatioInLandscape=4;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMaxAspectRatioInPortrait}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     * <p>Must be one of the following constant values.</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Constant</th><th>Value</th><th>Description</th></tr>
     * <tr><td>alwaysAllow</td><td>0</td><td></td></tr>
     * <tr><td>alwaysDisallow</td><td>ffffffff</td><td></td></tr>
     * </table>
     *
     * @attr name com.guilhermee9.anotacoespp:splitMaxAspectRatioInPortrait
     */
    public static final int SplitPlaceholderRule_splitMaxAspectRatioInPortrait=5;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinHeightDp}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinHeightDp
     */
    public static final int SplitPlaceholderRule_splitMinHeightDp=6;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinSmallestWidthDp}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinSmallestWidthDp
     */
    public static final int SplitPlaceholderRule_splitMinSmallestWidthDp=7;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitMinWidthDp}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be an integer value, such as "<code>100</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitMinWidthDp
     */
    public static final int SplitPlaceholderRule_splitMinWidthDp=8;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#splitRatio}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a floating point value, such as "<code>1.2</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:splitRatio
     */
    public static final int SplitPlaceholderRule_splitRatio=9;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#stickyPlaceholder}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a boolean value, such as "<code>true</code>" or
     * "<code>false</code>".
     *
     * @attr name com.guilhermee9.anotacoespp:stickyPlaceholder
     */
    public static final int SplitPlaceholderRule_stickyPlaceholder=10;
    /**
     * <p>This symbol is the offset where the {@link com.guilhermee9.anotacoespp.R.attr#tag}
     * attribute's value can be found in the {@link #SplitPlaceholderRule} array.
     *
     * <p>May be a string value, using '\\;' to escape characters such as
     * '\\n' or '\\uxxxx' for a unicode character;
     *
     * @attr name com.guilhermee9.anotacoespp:tag
     */
    public static final int SplitPlaceholderRule_tag=11;
    /**
     * Attributes that can be used with a SwipeRefreshLayout.
     * <p>Includes the following attributes:</p>
     * <table>
     * <colgroup align="left" />
     * <colgroup align="left" />
     * <tr><th>Attribute</th><th>Description</th></tr>
     * <tr><td><code>{@link #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor com.guilhermee9.anotacoespp:swipeRefreshLayoutProgressSpinnerBackgroundColor}</code></td><td>Background color for SwipeRefreshLayout progress spinner.</td></tr>
     * </table>
     * @see #SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int[] SwipeRefreshLayout={
      0x7f03003b
    };
    /**
     * <p>
     * @attr description
     * Background color for SwipeRefreshLayout progress spinner.
     *
     * <p>May be a color value, in the form of "<code>#<i>rgb</i></code>",
     * "<code>#<i>argb</i></code>", "<code>#<i>rrggbb</i></code>", or
     * "<code>#<i>aarrggbb</i></code>".
     *
     * @attr name com.guilhermee9.anotacoespp:swipeRefreshLayoutProgressSpinnerBackgroundColor
     */
    public static final int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor=0;
  }
}